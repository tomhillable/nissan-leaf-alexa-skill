AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates a build, test and deployment pipeline.'
Parameters:

  Branch:
    Default: master
    Description: Branch to use from the repository.
    Type: String
    
  Project:
    Default: nissan-leaf-alexa-skill
    Description: The name this project will be identified as inside AWS.
    Type: String
    
  RepositoryName:
    Default: tomhillable/nissan-leaf-alexa-skill
    Description: The name of the repository that triggers this pipeline
    Type: String
  
  GithubToken:
    Default: /Secrets/Git/github.com/PublicRepoToken
    Description: The path to the GithubToken in Parameter Store
    Type: AWS::SSM::Parameter::Value<String>
    NoEcho: true

  GithubTokenPath:
    Default: /Secrets/Git/github.com/PublicRepoToken
    Description: The path to the GithubToken in Parameter Store
    Type: AWS::SSM::Parameter::Name


Resources:

  ArtifactStore:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            ExpirationInDays: 1
    
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RestartExecutionOnUpdate: false
      ArtifactStore:
        Location: !Ref ArtifactStore
        Type: S3
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Branch: !Ref Branch
                Owner: !Select [ 0, !Split [ "/", !Ref RepositoryName ] ]
                Repo: !Select [ 1, !Split [ "/", !Ref RepositoryName ] ]
                OAuthToken: !Ref GithubToken
        - Name: Pipeline
          Actions:
            - Name: Update
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Ref AWS::StackName
                TemplatePath: SourceOutput::.ci/pipeline.yml
                ParameterOverrides: !Sub |
                  {
                    "Branch": "${Branch}",
                    "Project": "${Project}",
                    "RepositoryName": "${RepositoryName}",
                    "GithubToken": "${GithubTokenPath}",
                    "GithubTokenPath": "${GithubTokenPath}"
                  }
        - Name: Build
          Actions:
            - Name: Build
              RunOrder: 2
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref Build
        - Name: Release
          Actions:
            - Name: Create
              RunOrder: 1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub '${Project}-${Branch}-release'
                ChangeSetName: !Sub '${Project}-${Branch}-release-cs'
                TemplatePath: 'BuildOutput::template.yml'
                ParameterOverrides: !Sub '{ "Name": "${Project}" }'
            - Name: Deploy
              RunOrder: 3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: !Sub '${Project}-${Branch}-release-cs'
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub '${Project}-${Branch}-release'

  Build:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref Project
      TimeoutInMinutes: 10
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: .ci/buildspec.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'amazonlinux:2017.03.1.20170812'
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Ref ArtifactStore
          - Name: AWS_ACCOUNT_ID
            Value: !Ref 'AWS::AccountId'
      Artifacts:
        Type: CODEPIPELINE

  BuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/codebuild/${Build}"
      RetentionInDays: 1

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: !Sub "cloudformation.${AWS::URLSuffix}"
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudformationAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: '*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: 's3:*'
                Effect: Allow
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${ArtifactStore}"
                  - !Sub "arn:${AWS::Partition}:s3:::${ArtifactStore}/*"
              - Action: 'codebuild:*'
                Effect: Allow
                Resource: !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${Build}"
              - Action: 'cloudformation:*'
                Effect: Allow
                Resource: !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:*/${Project}*/*"
              - Action: iam:PassRole
                Effect: Allow
                Resource:
                  - !GetAtt BuildRole.Arn
                  - !GetAtt CloudformationRole.Arn
              - Action: lambda:ListFunctions
                Effect: Allow
                Resource: '*'

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: !Sub "codebuild.${AWS::URLSuffix}"
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildPackageAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: '*'
              - Action: 's3:*'
                Effect: Allow
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${ArtifactStore}"
                  - !Sub "arn:${AWS::Partition}:s3:::${ArtifactStore}/*"
